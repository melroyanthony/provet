[project]
name = "provet"
version = "1.0.0"
description = "Discharge summarization tool using OpenAI LLM with patient consultation context"
authors = [
    {name = "Melroy Anthony", email = "themelroyanthony@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "jinja2>=3.1.6",
    "openai>=1.78.0",
    "pydantic>=2.11.4",
    "python-dotenv>=1.1.0",
]

[dependency-groups]
api = [
    "fastapi>=0.115.12",
    "python-multipart>=0.0.20",
    "uvicorn>=0.34.2",
]
dev = [
    "ipykernel>=6.29.5",
    "ipython>=9.2.0",
    "ruff>=0.11.9",
]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
]

[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["provet"]

[tool.hatch.build.targets.sdist]
include = [
    "provet",
    "README.md",
]

[tool.ruff]
target-version = "py313"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true